@page "/Product/Update/{IdProduct}"
@inject CNC.Service.IProductService ProductService
@inject CNC.Service.IColorService ColorService
@inject CNC.Service.ISizeService SizeService
@inject CNC.Service.ICategoryService CategoryService
@inject CNC.Service.ISizeColorProductService SizeColorProductService
@using CNC.Entities
@inject IJSRuntime JSRuntime


<div>
    <EditForm Model="_item" OnValidSubmit="@Save_Click">
        <DataAnnotationsValidator />

        <div class="form-group">
            <label class="control-label col-md-2">Id</label>
            <div class="col-md-3">
                <InputText class="form-control" @bind-Value="IdProduct"  disabled="True" />
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Name</label>
            <div class="col-md-3">
                <InputText class="form-control" @bind-Value="_item.Name"  disabled="True"/>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Price</label>
            <div class="col-md-3">
                <InputNumber class="form-control" @bind-Value="_item.Price"  disabled="True"/>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Category</label>
            <div class="col-md-3">
                <InputSelect @bind-Value="_item.CategoryId" class="form-control"  disabled="True">
                    <option value="">Select Category</option>
                    @foreach (var type in _category)
                    {
                        //@CategoryService.getCategoryFromId(_item.CategoryId).Name
                        //if (type.Name != CategoryService.getCategoryFromId(_item.CategoryId).Name)
                        //{
                        <option value="@type.Id">@type.Name</option>//}
                     }
                </InputSelect>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Description</label>
            <div class="col-md-3">
                <InputText class="form-control" @bind-Value="_item.Description"  disabled="True"/>
            </div>
        </div>
        <table>
            <thead>
                <tr>
                    <th>Size</th>
                    <th>Color</th>
                </tr>
            </thead>
            <tbody>
                <tr>

                    <th>
                        <InputSelect @bind-Value="_size.FirstOrDefault().Id" class="form-control">
                            <option value="">Select Size</option>
                            @foreach (var value in _size)
                            {
        <option value="@value.Id">@value.Name</option>}
                            }
                        </InputSelect>
                    </th>
                    <th>
                        <InputSelect @bind-Value="_color.FirstOrDefault().Id" class="form-control">
                            <option value="">Select Color</option>
                            @foreach (var value in _color)
                            {
        <option value="@value.Id">@value.Name</option>}
                            }
                        </InputSelect>
                    </th>

                </tr>
            </tbody>
        </table>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-3 text-right esh-button-actions">
                <a href="/Product" class="btn esh-button esh-button-secondary">
                    [ Cancel ]
                </a>
                <button type="submit" class="btn esh-button esh-button-primary">
                    [ Save ]
                </button>
            </div>
        </div>

    </EditForm>
</div>

@code
{ [Parameter]
    public string IdProduct { get; set; }
    private Product _item;
    public IEnumerable<Product> _product;
    public IEnumerable<Category> _category;
    public IEnumerable<Size> _size;
    public IEnumerable<Color> _color;
    private string name { get; set; }

    protected override void OnInitialized()
    {
        _item = ProductService.getProductFromId(int.Parse(IdProduct));
        _category = CategoryService.getAllCategories();
        _size = SizeService.getAllSize();
        _color = ColorService.getAllColor();
    }

    private async void Save_Click()
    {
        //_product = ProductService.getAllProducts();
        //foreach (Product product in _product)
        //{
        //if (_item.Name == product.Name)
        //{
        //   if (_item.Id != product.Id)
        //   {
        //       await JSRuntime.InvokeAsync<string>("alert", "This name is exist");
        //       return;

        //   }
        //  }
        //}
        if(SizeColorProductService.CheckExistProduct(_size.FirstOrDefault().Id, _color.FirstOrDefault().Id, _item.Id) != null)
        {

        }
        else
        {
            SizeColorProduct sizeColorProduct = new SizeColorProduct();
            sizeColorProduct.ProductId = _item.Id;
            sizeColorProduct.SizeId = _size.FirstOrDefault().Id;
            sizeColorProduct.ColorId = _color.FirstOrDefault().Id;
            sizeColorProduct.Quantity = 100;
            SizeColorProductService.AddSizeColorProduct(sizeColorProduct);
            await JSRuntime.InvokeAsync<string>("alert", "Add success");
            return;
        }



    }
 }


