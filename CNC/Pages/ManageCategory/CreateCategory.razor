@page "/Category/Create"
@using CNC.Entities;
@inject IJSRuntime JSRuntime
@inject CNC.Service.ICategoryService CategoryService
@inject NavigationManager NavigationManager
<h3>Create Category</h3>

<div>
   <EditForm Model="category" OnValidSubmit="@Save_Click">
        <DataAnnotationsValidator />
         
        <div class="form-group">
            <label class="control-label col-md-2">Name</label>
            <div class="col-md-3">
                <InputText class="form-control" @bind-Value="category.Name" />
                <ValidationMessage For="(() => category.Name)" />
            </div>
        </div>
     
        <div class="form-group">
            <div class="col-md-offset-2 col-md-3 text-right esh-button-actions">
                <a href="/Category" class="btn esh-button esh-button-secondary">
                    [ Cancel ]
                </a>
                <button type="submit" class="btn esh-button esh-button-primary">
                    [ Save ]
                </button>
            </div>
        </div>
        
    </EditForm> 
</div>

@code{
    private readonly CNC.Entities.Category category = new CNC.Entities.Category();
    protected override void OnInitialized()
    {

    }
    private async void Save_Click()
    {
        
        int count = CategoryService.CountCategoryFromName(category.Name);
        if (count != 0)
        {
            await JSRuntime.InvokeAsync<string>("alert", "This name of category already exists");
            return;
        }
        else
        {
            int id = int.Parse( CategoryService.TakeLastIDCategory() );
            Category newcategory = new Category();
            newcategory.Id =  (id+1).ToString();
            newcategory.Name = category.Name;
            newcategory.Status = 0;
            CategoryService.addCategory(newcategory);
            await JSRuntime.InvokeAsync<string>("alert", "Add new category success");
            NavigationManager.NavigateTo("/Category");
            return;
        }

    }
}
