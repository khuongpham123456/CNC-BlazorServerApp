@page "/Category/Update/{IdCategory}"
@using CNC.Entities
@inject IJSRuntime JSRuntime
@inject CNC.Service.ICategoryService CategoryService
@inject NavigationManager NavigationManager


<div>
   <EditForm Model="category" OnValidSubmit="@Save_Click">
        <DataAnnotationsValidator />
         <div class="form-group">
            <label class="control-label col-md-2">Id Category</label>
            <div class="col-md-3">
                <InputText class="form-control" @bind-Value="category.Id" disabled="True"/>
                <ValidationMessage For="(() => category.Id)" />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Name</label>
            <div class="col-md-3">
                <InputText class="form-control" @bind-Value="category.Name" />
                <ValidationMessage For="(() => category.Name)" />
            </div>
        </div>
     
        <div class="form-group">
            <div class="col-md-offset-2 col-md-3 text-right esh-button-actions">
                <a href="/Category" class="btn esh-button esh-button-secondary">
                    [ Cancel ]
                </a>
                <button type="submit" class="btn esh-button esh-button-primary">
                    [ Save ]
                </button>
            </div>
        </div>
        
    </EditForm> 
</div>

@code{
    [Parameter]
    public string IdCategory{ get; set; }

    private Category category;
    protected override void OnInitialized()
    {
        category = CategoryService.getCategoryFromId(IdCategory);
    }
    private async void Save_Click()
    {

        int count = CategoryService.CountCategoryFromName(category.Name);

        if (count != 0)
        {   
            foreach(Category cate in CategoryService.getAllCategories())
            {
                if(category.Id==cate.Id && category.Name == cate.Name)
                {
                    await JSRuntime.InvokeAsync<string>("alert", "Update success");
                    NavigationManager.NavigateTo("/Category");
                    return;
                }
                else if(category.Id!=cate.Id && category.Name == cate.Name)
                {
                    await JSRuntime.InvokeAsync<string>("alert", "This name of category already exists");
               return;
                }
            }
            
            
        }
        else
        {

                CategoryService.updateCategory(category.Id, category.Name);
                await JSRuntime.InvokeAsync<string>("alert", "Update success");
                NavigationManager.NavigateTo("/Category");
                return;  
        }
        
           
    }
}
